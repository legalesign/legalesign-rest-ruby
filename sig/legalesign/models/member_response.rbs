module Legalesign
  module Models
    type member_response =
      {
        created: Time,
        group: String,
        modified: Time,
        permission: Legalesign::Models::permissions_enum,
        resource_uri: String,
        user: String
      }

    class MemberResponse < Legalesign::Internal::Type::BaseModel
      attr_reader created: Time?

      def created=: (Time) -> Time

      attr_reader group: String?

      def group=: (String) -> String

      attr_reader modified: Time?

      def modified=: (Time) -> Time

      attr_reader permission: Legalesign::Models::permissions_enum?

      def permission=: (
        Legalesign::Models::permissions_enum
      ) -> Legalesign::Models::permissions_enum

      attr_reader resource_uri: String?

      def resource_uri=: (String) -> String

      attr_reader user: String?

      def user=: (String) -> String

      def initialize: (
        ?created: Time,
        ?group: String,
        ?modified: Time,
        ?permission: Legalesign::Models::permissions_enum,
        ?resource_uri: String,
        ?user: String
      ) -> void

      def to_hash: -> {
        created: Time,
        group: String,
        modified: Time,
        permission: Legalesign::Models::permissions_enum,
        resource_uri: String,
        user: String
      }
    end
  end
end
