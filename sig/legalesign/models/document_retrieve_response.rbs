module Legalesign
  module Models
    type document_retrieve_response =
      {
        archived: bool,
        auto_archive: bool,
        cc_emails: String,
        created: Time,
        do_email: bool,
        download_final: bool,
        footer: String,
        footer_height: Integer,
        group: String,
        has_fields: bool,
        hash_value: String,
        header: String,
        header_height: Integer,
        modified: Time,
        name: String,
        pdf_password: String,
        pdf_password_type: String,
        pdftext: String,
        redirect: String,
        resource_uri: String,
        return_signer_links: bool,
        sign_mouse: bool,
        sign_time: Time,
        sign_type: bool,
        sign_upload: bool,
        signature_placement: Integer,
        signature_type: Integer,
        signers: ::Array[::Array[String]],
        signers_in_order: bool,
        status: Legalesign::Models::document_status_enum,
        tag: String,
        :tag1 => String,
        :tag2 => String,
        template: String,
        templatepdf: String,
        text: String,
        user: String,
        uuid: String
      }

    class DocumentRetrieveResponse < Legalesign::Internal::Type::BaseModel
      attr_reader archived: bool?

      def archived=: (bool) -> bool

      attr_reader auto_archive: bool?

      def auto_archive=: (bool) -> bool

      attr_reader cc_emails: String?

      def cc_emails=: (String) -> String

      attr_reader created: Time?

      def created=: (Time) -> Time

      attr_reader do_email: bool?

      def do_email=: (bool) -> bool

      attr_reader download_final: bool?

      def download_final=: (bool) -> bool

      attr_reader footer: String?

      def footer=: (String) -> String

      attr_reader footer_height: Integer?

      def footer_height=: (Integer) -> Integer

      attr_reader group: String?

      def group=: (String) -> String

      attr_reader has_fields: bool?

      def has_fields=: (bool) -> bool

      attr_reader hash_value: String?

      def hash_value=: (String) -> String

      attr_reader header: String?

      def header=: (String) -> String

      attr_reader header_height: Integer?

      def header_height=: (Integer) -> Integer

      attr_reader modified: Time?

      def modified=: (Time) -> Time

      attr_reader name: String?

      def name=: (String) -> String

      attr_reader pdf_password: String?

      def pdf_password=: (String) -> String

      attr_reader pdf_password_type: String?

      def pdf_password_type=: (String) -> String

      attr_reader pdftext: String?

      def pdftext=: (String) -> String

      attr_reader redirect: String?

      def redirect=: (String) -> String

      attr_reader resource_uri: String?

      def resource_uri=: (String) -> String

      attr_reader return_signer_links: bool?

      def return_signer_links=: (bool) -> bool

      attr_reader sign_mouse: bool?

      def sign_mouse=: (bool) -> bool

      attr_reader sign_time: Time?

      def sign_time=: (Time) -> Time

      attr_reader sign_type: bool?

      def sign_type=: (bool) -> bool

      attr_reader sign_upload: bool?

      def sign_upload=: (bool) -> bool

      attr_reader signature_placement: Integer?

      def signature_placement=: (Integer) -> Integer

      attr_reader signature_type: Integer?

      def signature_type=: (Integer) -> Integer

      attr_reader signers: ::Array[::Array[String]]?

      def signers=: (::Array[::Array[String]]) -> ::Array[::Array[String]]

      attr_reader signers_in_order: bool?

      def signers_in_order=: (bool) -> bool

      attr_reader status: Legalesign::Models::document_status_enum?

      def status=: (
        Legalesign::Models::document_status_enum
      ) -> Legalesign::Models::document_status_enum

      attr_reader tag: String?

      def tag=: (String) -> String

      attr_reader tag1: String?

      def tag1=: (String) -> String

      attr_reader tag2: String?

      def tag2=: (String) -> String

      attr_reader template: String?

      def template=: (String) -> String

      attr_reader templatepdf: String?

      def templatepdf=: (String) -> String

      attr_reader text: String?

      def text=: (String) -> String

      attr_reader user: String?

      def user=: (String) -> String

      attr_reader uuid: String?

      def uuid=: (String) -> String

      def initialize: (
        ?archived: bool,
        ?auto_archive: bool,
        ?cc_emails: String,
        ?created: Time,
        ?do_email: bool,
        ?download_final: bool,
        ?footer: String,
        ?footer_height: Integer,
        ?group: String,
        ?has_fields: bool,
        ?hash_value: String,
        ?header: String,
        ?header_height: Integer,
        ?modified: Time,
        ?name: String,
        ?pdf_password: String,
        ?pdf_password_type: String,
        ?pdftext: String,
        ?redirect: String,
        ?resource_uri: String,
        ?return_signer_links: bool,
        ?sign_mouse: bool,
        ?sign_time: Time,
        ?sign_type: bool,
        ?sign_upload: bool,
        ?signature_placement: Integer,
        ?signature_type: Integer,
        ?signers: ::Array[::Array[String]],
        ?signers_in_order: bool,
        ?status: Legalesign::Models::document_status_enum,
        ?tag: String,
        ?tag1: String,
        ?tag2: String,
        ?template: String,
        ?templatepdf: String,
        ?text: String,
        ?user: String,
        ?uuid: String
      ) -> void

      def to_hash: -> {
        archived: bool,
        auto_archive: bool,
        cc_emails: String,
        created: Time,
        do_email: bool,
        download_final: bool,
        footer: String,
        footer_height: Integer,
        group: String,
        has_fields: bool,
        hash_value: String,
        header: String,
        header_height: Integer,
        modified: Time,
        name: String,
        pdf_password: String,
        pdf_password_type: String,
        pdftext: String,
        redirect: String,
        resource_uri: String,
        return_signer_links: bool,
        sign_mouse: bool,
        sign_time: Time,
        sign_type: bool,
        sign_upload: bool,
        signature_placement: Integer,
        signature_type: Integer,
        signers: ::Array[::Array[String]],
        signers_in_order: bool,
        status: Legalesign::Models::document_status_enum,
        tag: String,
        :tag1 => String,
        :tag2 => String,
        template: String,
        templatepdf: String,
        text: String,
        user: String,
        uuid: String
      }
    end
  end
end
